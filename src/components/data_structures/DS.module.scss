@use '../../styles/mixins' as *;

$list-gap: 2.4em;
$min-clr: hsla(195 94% 13% / 0.8);
$max-clr: hsla(35 100% 22% / 0.8);
$found-clr: hsla(120 62% 15% / 0.8);

.min {
  background-image: linear-gradient($min-clr, $min-clr);
}

.max {
  background-image: linear-gradient($max-clr, $max-clr);
}   

.found {
  background-image: linear-gradient($found-clr, $found-clr);
  &.max {
    background-image: linear-gradient(-20deg, $found-clr 50%, $max-clr 50%) ;
  }
  &.min {
    background-image: linear-gradient(-20deg, $found-clr 50%, $min-clr 50%) ;
  }
}

.stack-like {
  display: flex;
  flex-direction: column-reverse;
  justify-content: center;  
  font-size: 20px;
  width: 10em;
  div {
    @include DS-item;
    width: 100%;
    animation: show-from-left .8s ease-in;
  }
}

.list-like {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: $list-gap;
  padding: 4rem;
  font-size: 20px;
  div {
    @include DS-item;
    animation: show-from-top .8s ease-in;
    width: 5em;
    &::after {
      content:  '->';
      position: absolute;
      left: 100%;
      width: $list-gap;
      display: flex;
      justify-content: center;
    }
    &.null::after  {
      content: '-> NULL';
      position: absolute;
      left: 100%;
      width: calc(2.5 * $list-gap);
      @include flex-center;
    }
    &.doubly-list-item::after {
      content:  '-> <-';
      padding: calc($list-gap / 3);
    }
    &.doubly-list-item.null::after  {
      content: '-> NULL <-';
    }
/*     &.circular-arrow {
      
    } */
  }
}


@keyframes show-from-left {
  0% {
    opacity: 0;
    transform: translateX(-6rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes show-from-top {
  0% {
    opacity: 0;
    transform: translateY(-6rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);
  }
}
